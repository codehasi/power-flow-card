(()=>{"use strict";const t={solar:"M11.45,2V5.55L15,3.77L11.45,2M10.45,8L8,10.46L11.75,11.71L10.45,8M2,11.45L3.77,15L5.55,11.45H2M10,2H2V10C2.57,10.17 3.17,10.25 3.77,10.25C7.35,10.26 10.26,7.35 10.27,3.75C10.26,3.16 10.17,2.57 10,2M17,22V16H14L19,7V13H22L17,22Z",grid:"M8.28,5.45L6.5,4.55L7.76,2H16.23L17.5,4.55L15.72,5.44L15,4H9L8.28,5.45M18.62,8H14.09L13.3,5H10.7L9.91,8H5.38L4.1,10.55L5.89,11.44L6.62,10H17.38L18.1,11.45L19.89,10.56L18.62,8M17.77,22H15.7L15.46,21.1L12,15.9L8.53,21.1L8.3,22H6.23L9.12,11H11.19L10.83,12.35L12,14.1L13.16,12.35L12.81,11H14.88L17.77,22M11.4,15L10.5,13.65L9.32,18.13L11.4,15M14.68,18.12L13.5,13.64L12.6,15L14.68,18.12Z",battery:"M16 20H8V6H16M16.67 4H15V2H9V4H7.33C6.6 4 6 4.6 6 5.33V20.67C6 21.4 6.6 22 7.33 22H16.67C17.41 22 18 21.41 18 20.67V5.33C18 4.6 17.4 4 16.67 4M15 16H9V19H15V16M15 7H9V10H15V7M15 11.5H9V14.5H15V11.5Z",home:"M10,20V14H14V20H19V12H22L12,3L2,12H5V20H10Z",consumer:"M12,2A7,7 0 0,0 5,9C5,11.38 6.19,13.47 8,14.74V17A1,1 0 0,0 9,18H15A1,1 0 0,0 16,17V14.74C17.81,13.47 19,11.38 19,9A7,7 0 0,0 12,2M9,21A1,1 0 0,0 10,22H14A1,1 0 0,0 15,21V20H9V21Z"};class e extends HTMLElement{constructor(){super(),this.config=null,this.attachShadow({mode:"open"})}static get properties(){return{config:{type:Object}}}set hass(t){}setConfig(t){this.config=t,this.render()}calculateLayout(){if(!this.config)return;this.config.sources.forEach(((t,e)=>{if(!t.x||!t.y){const n=this.config.sources.length,s=70,o=Math.max(s/n,18);t.x=15,t.y=15+e*o+o/2}})),this.config.consumers.forEach(((t,e)=>{if(!t.x||!t.y){const n=this.config.consumers.length,s=70,o=Math.max(s/n,18);t.x=85,t.y=15+e*o+o/2}}))}createSVGElement(t){return document.createElementNS("http://www.w3.org/2000/svg",t)}createFlowLine(t,e,n,s,o,i=!1){const r=this.createSVGElement("path"),a=n-t,c=s-e,h=Math.sqrt(a*a+c*c),d=Math.atan2(c,a),l=t+20*Math.cos(d),f=e+20*Math.sin(d),u=n-20*Math.cos(d),p=s-20*Math.sin(d),L=h*(i?.5:.2),g=this.config?.width?this.config.width/2:400,m=this.midPointX(t,n)<g?1:-1,y=-c/h*L*m,b=a/h*L*m,H=`\n      M ${l} ${f}\n      C ${l+a/3+y} ${f+c/3+b},\n        ${u-a/3+y} ${p-c/3+b},\n        ${u} ${p}\n    `;r.setAttribute("d",H),r.setAttribute("fill","none"),r.setAttribute("stroke",o>=0?"#4CAF50":"#F44336"),r.setAttribute("stroke-width","2");const x=this.config?.animationSpeed||2,w=o>=0?x:-x;return r.innerHTML="\n      <style>\n        @keyframes flow-positive {\n          from { stroke-dashoffset: 24; }\n          to { stroke-dashoffset: 0; }\n        }\n        @keyframes flow-negative {\n          from { stroke-dashoffset: 0; }\n          to { stroke-dashoffset: 24; }\n        }\n      </style>\n    ",r.style.strokeDasharray="8,4",r.style.animation=`flow-${o>=0?"positive":"negative"} ${Math.abs(w)}s linear infinite`,r}createIcon(e,n,s,o,i){const r=this.createSVGElement("g");r.setAttribute("transform",`translate(${n},${s})`);const a=this.createSVGElement("circle");a.setAttribute("cx","0"),a.setAttribute("cy","0"),a.setAttribute("r","32"),a.setAttribute("fill","var(--ha-card-background, #fff)"),a.setAttribute("stroke","var(--primary-text-color, #000)"),a.setAttribute("stroke-width","1");const c=this.createSVGElement("path");c.setAttribute("d",t[e]),c.setAttribute("transform","translate(-12, -26)"),c.setAttribute("fill","var(--primary-text-color, #000)");const h=this.createSVGElement("text");h.setAttribute("x","0"),h.setAttribute("y","8"),h.setAttribute("text-anchor","middle"),h.setAttribute("class","label"),h.textContent=i;const d=this.createSVGElement("text");return d.setAttribute("x","0"),d.setAttribute("y","22"),d.setAttribute("text-anchor","middle"),d.setAttribute("class","power-value"),d.textContent=`${Math.abs(o)}W`,r.appendChild(a),r.appendChild(c),r.appendChild(h),r.appendChild(d),r}findSourceById(t){return this.config?.sources.find((e=>e.id===t))}midPointX(t,e){return(t+e)/2}getPosition(t,e,n){return{x:t.x/100*e,y:t.y/100*n}}render(){if(!this.shadowRoot||!this.config)return;this.calculateLayout();const t=this.config.width||800,e=this.config.height||400;this.shadowRoot.innerHTML=`\n      <style>\n        :host {\n          display: block;\n          padding: 16px;\n          background: var(--ha-card-background, #fff);\n          border-radius: var(--ha-card-border-radius, 4px);\n          box-shadow: var(--ha-card-box-shadow, 0 2px 2px rgba(0, 0, 0, 0.1));\n        }\n        svg {\n          width: 100%;\n          height: auto;\n        }\n        text {\n          font-family: var(--primary-font-family, Roboto);\n          fill: var(--primary-text-color, #000);\n        }\n        .power-value {\n          font-size: 10px;\n          font-weight: bold;\n        }\n        .label {\n          font-size: 10px;\n          opacity: 0.8;\n        }\n        .source-connection {\n          stroke-dasharray: 4;\n          opacity: 0.7;\n        }\n      </style>\n      <svg width="${t}" height="${e}" viewBox="0 0 ${t} ${e}"></svg>\n    `;const n=this.shadowRoot.querySelector("svg");if(!n)return;const s=t/2,o=e/2;n.appendChild(this.createIcon("home",s,o,0,"Home")),this.config.sources.forEach((i=>{const r=this.getPosition(i,t,e);n.appendChild(this.createIcon(i.type,r.x,r.y,i.power,i.name)),n.appendChild(this.createFlowLine(r.x,r.y,s,o,i.power)),this.config?.showSourceConnections&&i.connections&&i.connections.forEach((s=>{const o=this.findSourceById(s.toId);if(o){const i=this.getPosition(o,t,e),a=this.createFlowLine(r.x,r.y,i.x,i.y,s.power,!0);a.classList.add("source-connection"),n.appendChild(a)}}))})),this.config.consumers.forEach((i=>{const r=this.getPosition(i,t,e);n.appendChild(this.createIcon("consumer",r.x,r.y,i.power,i.name)),n.appendChild(this.createFlowLine(s,o,r.x,r.y,i.power))}))}}customElements.define("dynamic-power-flow-card",e)})();